<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net452</TargetFramework>
    <AssemblyName>ConsistencyTracker</AssemblyName>
    <RootNamespace>Celeste.Mod.ConsistencyTracker</RootNamespace>
    <LangVersion>7.3</LangVersion>
    <StrippedLibraries>lib-stripped</StrippedLibraries>
    <CelestePrefix Condition="'$(CelestePrefix)' == '' And (Exists('..\..\Celeste.exe') Or Exists('..\..\Celeste.dll'))">..\..</CelestePrefix>
    <CelestePrefix Condition="'$(CelestePrefix)' == '' And (Exists('..\..\..\Celeste.exe') Or Exists('..\..\..\Celeste.dll'))">..\..\..</CelestePrefix>
    <CelestePrefix Condition="'$(CelestePrefix)' == ''">lib-stripped</CelestePrefix>
    
    <!-- Use the legacy reference dir for Core installs -->
    <CelesteIsCore>false</CelesteIsCore>
    <CelesteIsCore Condition="Exists('$(CelestePrefix)\Celeste.dll')">true</CelesteIsCore>
    <CelestePrefix Condition="$(CelesteIsCore)">$(CelestePrefix)\legacyRef</CelestePrefix>
    
    <CelesteType Condition="'$(CelesteType)' == '' And Exists('$(CelesteGamePath)\BuildIsXNA.txt')">XNA</CelesteType>
    <CelesteType Condition="'$(CelesteType)' == ''">FNA</CelesteType>
    <XNAPath Condition="'$(XNAPath)' == ''">$(WINDIR)\Microsoft.NET\assembly\GAC_32\{0}\v4.0_4.0.0.0__842cf8be1de50553\{0}.dll</XNAPath>
  </PropertyGroup>
	
  <Target Name="CheckCoreInstall" BeforeTargets="PrepareForBuild" Condition="$(CelesteIsCore)">
    <Error Condition="!Exists('$(CelestePrefix)')" Text="Detected a .NET Core Everest install without the required legacyRef install needed to build .NET Framework mods - see the Everest wiki (https://github.com/EverestAPI/Resources/wiki/Code-Mod-Core-Migration-Guide) for info on how to set it up" />
    <Message Text="Building against .NET Core Everest legacyRef install" Importance="high" />
  </Target>

  <!--Disable "Copy Local" for all references-->
  <ItemDefinitionGroup>
    <PackageReference PrivateAssets="all" ExcludeAssets="runtime" />
    <Reference Private="false" />
  </ItemDefinitionGroup>

  <ItemGroup>
    <PackageReference Include="MonoMod" Version="21.08.19.01" />
    <PackageReference Include="MonoMod.RuntimeDetour" Version="21.08.19.01" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.2" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="$(CelestePrefix)\Celeste.exe">
      <Private>false</Private>
    </Reference>
    <Reference Include="$(CelestePrefix)\MMHOOK_Celeste.dll">
      <Private>false</Private>
    </Reference>
    <Reference Include="$(StrippedLibraries)\SpeedrunTool.SpeedrunTool.dll">
      <Private>false</Private>
    </Reference>
    <Reference Include="System.Web" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="PhysicsLog\AnalogInfo\" />
  </ItemGroup>

  <Choose>
    <When Condition="'$(CelesteType)' == 'FNA'">
      <ItemGroup>
        <Reference Include="$(CelestePrefix)\FNA.dll">
          <Private>false</Private>
        </Reference>
      </ItemGroup>
    </When>

    <When Condition="'$(CelesteType)' == 'XNA'">
      <ItemGroup>
        <Reference Include="$([System.String]::Format('$(XNAPath)', 'Microsoft.Xna.Framework'))">
          <Private>false</Private>
        </Reference>
        <Reference Include="$([System.String]::Format('$(XNAPath)', 'Microsoft.Xna.Framework.Game'))">
          <Private>false</Private>
        </Reference>
        <Reference Include="$([System.String]::Format('$(XNAPath)', 'Microsoft.Xna.Framework.Graphics'))">
          <Private>false</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>

  <Target Name="CopyFiles" AfterTargets="Build">
    <Copy SourceFiles="$(OutputPath)\ConsistencyTracker.dll" DestinationFolder="bin" />
    <Copy SourceFiles="$(OutputPath)\ConsistencyTracker.pdb" DestinationFolder="bin" />
  </Target>

</Project>
